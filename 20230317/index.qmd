---
format: 
  revealjs:
    theme: [default, custom.scss]
    revealjs-plugins:
      - fullscreen
---

```{r, include=FALSE}
library(knitr)
library(htmltools)
library(bslib)

render_as_iframe <- function(x, options, ...) {
  lbl <- opts_current$get("label")
  doc_name <- sub("[.]Rmd", "", knitr::current_input())
  lbl_dir <- file.path("examples", doc_name, lbl)
  if (!dir.exists(lbl_dir)) {
    dir.create(lbl_dir, recursive = TRUE)
  }
  file <- file.path(lbl_dir, paste0(lbl, ".html"))  
  tryCatch(
    save_html(x, file),
    error = function(e) {
      stop("Don't know how to render ", class(x)[[1]], " as an <iframe>")
    }
  )
  include_url(file)
}

knitr::opts_hooks$set(as_iframe = function(opts) {
  opts$render <- render_as_iframe
  opts$out.width <- "100%"
  opts$out.extra <- paste0(
    'seamless="seamless" frameBorder="0" loading="lazy"'
  )
  opts
})

opts_chunk$set(message = FALSE, echo = TRUE, as_iframe = TRUE)
```

# Towards the next generation of Shiny UI {.title-slide background-image="ship.webp" background-size="contain"}

Carson Sievert  
Software Engineer, Posit  
[bit.ly/bslib-dashboard-slides](https://bit.ly/bslib-dashboard-slides)

# Towards the next generation of Shiny UI {.title-slide .title-slide-strike background-image="ship.webp" background-size="contain"}

::: {style='visibility:hidden;'}
Carson Sievert
Software Engineer, Posit
[bit.ly/bslib-dashboard-slides](https://bit.ly/bslib-dashboard-slides)
:::

::: {style='font-size:3rem; font-weight:700; margin-top:-4rem;'}
How to make a dashboard with `{bslib}`
:::

## `{bslib}`: a modern Shiny UI toolkit

1.  Use *any* version of Bootstrap and easily customize CSS.

::: {.incremental}
2.  Provide modern UI replacements for `{shiny}` and `{shinydashboard}`.
    -  <b>Currently includes cards, sidebars, value boxes, accordions, page/layout helpers, and more.</b>
    -  We plan on integrating this work into the [Shiny for Python](https://shiny.rstudio.com/py/) and [Shiny UI editor](https://rstudio.github.io/shinyuieditor/).
:::


## Hello `page_*()`

::: {.font-sm}
Easily upgrade to latest Bootstrap w/ `{bslib}` drop-in replacements for `{shiny}`'s `fluidPage()`, `fixedPage()`, etc (still on Bootstrap 3).
:::

```{r}
#| output-location: column
library(bslib)
library(shiny)

page_fluid(
  h1("Hello Bootstrap 5")
)
```

## Pin version via `bs_theme()`

::: {.font-sm}
`page_*()` containers _currently_ default to Bootstrap 5 (via `theme = bs_theme()`). Production apps should consider hard-coding the `version`.
:::

```{r}
#| output-location: column
#| code-line-numbers: "5"
library(bslib)
library(shiny)

page_fluid(
  theme = bs_theme(version = 5),
  h1("Hello Bootstrap 5")
)
```


## Bootswatch themes

::: {.font-sm}
Use `bs_theme()` to easily use [Bootswatch](https://bootswatch.com) themes...
:::

```{r}
#| output-location: column
#| code-line-numbers: "5-7"
library(bslib)
library(shiny)

page_fluid(
  theme = bs_theme(
    bootswatch = "quartz"
  ),
  h1("Hello Bootstrap 5")
)
```


## Custom themes

::: {.font-sm}
- Easily choose main colors and fonts (and 100s of other [theming variables](https://rstudio.github.io/bslib/articles/bs5-variables.html)).
    - Use `font_google()` to automatically download, cache, and import [Google Font](https://fonts.google.com/) files.
:::

```{r}
#| output-location: column
#| code-line-numbers: "5-10"
library(bslib)
library(shiny)

page_fluid(
  theme = bs_theme(
    bg = "#212121", 
    fg = "white",
    base_font = font_google(
      "Indie Flower"
    )
  ),
  h1("Hello Bootstrap 5")
)
```


## Utility Classes

::: {.font-sm}
[Bootstrap utility classes](https://getbootstrap.com/docs/5.3/utilities/text/) are also quite useful for spacing, alignment, and more. 
:::

```{r}
#| output-location: column
#| code-line-numbers: "13-14"
library(bslib)
library(shiny)

page_fluid(
  theme = bs_theme(
    bg = "#212121",
    fg = "white",
    base_font = font_google(
      "Indie Flower"
    )
  ),
  h1(
    class = "text-center", 
    class = "text-primary",
    "Hello Bootstrap 5"
  )
)
```

## Let's build a dashboard with `{bslib}`

- Follow along at [bit.ly/bslib-dashboards-cloud-demo](https://bit.ly/bslib-dashboards-cloud-demo)

<br>

::: callout-caution

Sidebars and accordions are still in development, but if you're brave, try them out:

```{r, eval = FALSE}
remotes::install_github("rstudio/bslib")
```

:::


<!--
## `{bslib}` components {.smaller .scrollable}

::: {.columns}

::: {.column}
1. `card()`
    - Group related information with borders and padding.
2. `sidebar()` + `layout_sidebar()`
    - Flexible, collapsing, sidebar layout.
3. `value_box()`
    - Highlight a value with a title.
:::

::: {.column}
4. `accordion()`
    - Collapsible content panels.
5. `layout_column_wrap()`
    - Wrap a 1d sequence of UI elements into a responsive 2d grid. 
6. A more complete grammar of `nav()`-igation components.
    - Among other things, introduces card-based navs (e.g., `navs_tab_card()`).
:::

:::

::: {.fragment}
### That's basically all one needs for a dashboard!
:::
-->


## In summary, consider `{bslib}` for your next dashboard {.smaller}

::: {.fragment}
-  Steeper learning curve than `{shinydashboard}` & `{flexdashboard}`
    - More theme-able, composable, extensible, and portable.
:::

::: {.fragment}
- You may miss some `{shinydashboard}` features
    - As always, we love to hear your feedback, and ideas for improvements!
:::

::: {.fragment}
-  Not everything needs to be dashboard (and/or use Shiny)! 
    - We hope these components are generically useful and portable (in R Markdown, static sites, eventually Quarto, etc.)
:::

## In summary, consider `{bslib}` for your next dashboard

::: callout-caution

Sidebars and accordions are still in development, but if you're brave, try them out:

```{r, eval = FALSE}
remotes::install_github("rstudio/bslib")
```

:::

## Thanks!

-  Learn more at [rstudio.github.io/bslib](https://rstudio.github.io/bslib)
    - Expect doc improvements in the coming weeks.

- Link to cloud project [bit.ly/bslib-dashboards-cloud-demo](https://bit.ly/bslib-dashboards-cloud-demo)

- Twitter/GitHub: [@cpsievert](https://twitter.com/cpsievert)

- Web: [cpsievert.me](https://cpsievert.me)

## {fullscreen=true}

<iframe class="r-stretch" data-src="https://testing-apps.shinyapps.io/flights"></iframe>